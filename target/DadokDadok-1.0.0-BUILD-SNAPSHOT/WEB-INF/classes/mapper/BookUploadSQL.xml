<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.mini6.bookpage.dao.BookDAO">


	<!-- 도서 엑셀 파일 업로드 -->
	<!-- ISBN으로 이미 존재하는 책이 있는지 확인하는 쿼리 -->
	<select id="existsByIsbn" parameterType="String" resultType="int">
		SELECT COUNT(1) FROM books WHERE isbn = #{isbn}
	</select>
	<!-- booksLibraries 테이블에 isbn이랑 lib_code가 존재하는지 확인하는 쿼리 -->
	<select id="existsByIsbnAndLibCode" parameterType="booksLibrariesVO" resultType="int">
		SELECT COUNT(1) FROM booksLibraries WHERE isbn = #{isbn} AND lib_code = #{lib_code}
	</select>

	<!-- 새로운 책을 삽입하는 쿼리 -->
	<insert id="insertBooks" parameterType="booksVO">
		INSERT INTO books (title, author, publisher, year_of_publication, isbn, set_isbn,
						   additional_symbol, volume, subject_classification_number)
		VALUES (#{title}, #{author}, #{publisher}, #{yearOfPublication}, #{isbn}, #{setIsbn},
				#{additionalSymbol}, #{volume}, #{subjectClassificationNumber})
	</insert>
	<!-- 도서와도서관 정보를 삽입 -->
	<insert id="insertBooksLibraries" parameterType="booksLibrariesVO">
		INSERT INTO booksLibraries ( isbn, lib_code, numberOfCopies, numberOfLoans)
		VALUES (#{isbn}, #{lib_code}, #{numberOfCopies}, #{numberOfLoans})
	</insert>

	<!-- 업로드 히스토리 테이블에 업로드 정보를 삽입하는 쿼리 -->
	<insert id="insertUploadHistory" parameterType="booksHistoryVO">
		INSERT INTO book_upload_history (file_name, upload_date, file_size, file_type)
		VALUES (#{file_name}, now(), #{file_size}, #{file_type})
	</insert>

	<select id="selectAllBooksHistory" resultType="BooksHistoryVO">
		SELECT * FROM book_upload_history
		ORDER BY upload_date DESC
	</select>

	<!-- 도서관의 도서 정보를 업데이트 -->
	<update id="updateBooksLibraries" parameterType="booksLibrariesVO">
		UPDATE booksLibraries
		SET
			numberOfCopies = #{numberOfCopies},
			numberOfLoans = #{numberOfLoans}
		WHERE isbn = #{isbn} AND lib_code = #{lib_code}
	</update>

 	<!-- 첨부파일 업로드를 위한 도서관 검색 도서관명, 도서관 코드-->
	<select id="searchLibrary" parameterType="String" resultType="librariesVO">
		SELECT lib_name, lib_code FROM libraries
		WHERE lib_name LIKE CONCAT('%', #{searchKeyword}, '%')
		   OR lib_code LIKE CONCAT('%', #{searchKeyword}, '%');
	</select>

	<!-- books 총 개수 -->
	<select id="getBooksCount" resultType="int">
		SELECT COUNT(*) FROM books
	</select>

	<!-- booksLibraries 총 개수 -->
	<select id="getBooksLibrariesCount" resultType="int">
		SELECT COUNT(*) FROM booksLibraries
	</select>

</mapper>
